// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Urbaton.Data;

#nullable disable

namespace Urbaton.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Urbatron.Models.Parking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("PlacemarkDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlacemarkName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("SecurityCameras")
                        .HasColumnType("boolean");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlacemarkName", "PlacemarkDescription");

                    b.ToTable("Parkings");
                });

            modelBuilder.Entity("Urbatron.Models.ParkingLot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AccessibleEnviroment")
                        .HasColumnType("boolean");

                    b.Property<double>("BasePrice")
                        .HasColumnType("double precision");

                    b.Property<bool>("Charging")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ParkingId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ParkingId");

                    b.ToTable("ParkingLots");
                });

            modelBuilder.Entity("Urbatron.Models.Placemark", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<double>("LookAtLatitude")
                        .HasColumnType("double precision");

                    b.Property<double>("LookAtLongitude")
                        .HasColumnType("double precision");

                    b.HasKey("Name", "Description");

                    b.HasIndex("LookAtLatitude", "LookAtLongitude");

                    b.ToTable("Placemarks");
                });

            modelBuilder.Entity("Urbatron.Models.PlacemarkLookAt", b =>
                {
                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Altitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Heading")
                        .HasColumnType("double precision");

                    b.Property<double>("Range")
                        .HasColumnType("double precision");

                    b.Property<double>("Tilt")
                        .HasColumnType("double precision");

                    b.HasKey("Latitude", "Longitude");

                    b.ToTable("PlacemarkLookAt");
                });

            modelBuilder.Entity("Urbatron.Models.Parking", b =>
                {
                    b.HasOne("Urbatron.Models.Placemark", "Placemark")
                        .WithMany()
                        .HasForeignKey("PlacemarkName", "PlacemarkDescription")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Placemark");
                });

            modelBuilder.Entity("Urbatron.Models.ParkingLot", b =>
                {
                    b.HasOne("Urbatron.Models.Parking", null)
                        .WithMany("Lots")
                        .HasForeignKey("ParkingId");
                });

            modelBuilder.Entity("Urbatron.Models.Placemark", b =>
                {
                    b.HasOne("Urbatron.Models.PlacemarkLookAt", "LookAt")
                        .WithMany()
                        .HasForeignKey("LookAtLatitude", "LookAtLongitude")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookAt");
                });

            modelBuilder.Entity("Urbatron.Models.Parking", b =>
                {
                    b.Navigation("Lots");
                });
#pragma warning restore 612, 618
        }
    }
}
